####JAVA#######
class Solution {
    public ArrayList<Integer> maxOfMins(int[] arr) {
        // Your code here
int n = arr.length;
int[] left = new int[n];
int[] right = new int[n];
Arrays.fill(left,-1);
Arrays.fill(right,n);
Stack<Integer>st = new Stack<>();
for(int i = 0;i<n;i++){
    while(!st.isEmpty() && arr[st.peek()]>=arr[i]){
        st.pop();
    }
    if(!st.isEmpty()){
        left[i] = st.peek();
    }
    st.push(i);
}
st.clear();
for(int i = n-1;i>=0;i--){
    while(!st.isEmpty() && arr[st.peek()]>=arr[i]){
        st.pop();
    }
    if(!st.isEmpty()){
        right[i] = st.peek();
    }
    st.push(i);
}
int[] ans = new int[n+1];
for(int i = 0;i<n;i++){
    int len = right[i] - left[i]-1;
    if(len>=1 && len<=n){
    ans[len] = Math.max(arr[i],ans[len]);
    }
}
for(int i = n-1;i>=1;i--){
     ans[i] = Math.max(ans[i],ans[i+1]);
}
ArrayList<Integer> result = new ArrayList<>(); 
for(int i = 1;i<=n;i++){
    result.add(ans[i]);
}
return result;
    }
}
